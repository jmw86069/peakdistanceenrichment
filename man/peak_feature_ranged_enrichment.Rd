% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pde-enrich.R
\name{peak_feature_ranged_enrichment}
\alias{peak_feature_ranged_enrichment}
\title{Test hypergeometric enrichment of range count categories}
\usage{
peak_feature_ranged_enrichment(
  range_counts,
  test_cats = NULL,
  return_type = c("phyper", "wide"),
  verbose = FALSE,
  ...
)
}
\arguments{
\item{range_counts}{\code{data.frame} output from
\code{peak_feature_ranged_counter()}.}

\item{test_cats}{\code{list} of \code{character} vectors, where each
vector contains one or more category values to test for
enrichment against all other category values. When
\code{test_cats} is \code{NULL} then each category value is tested
individually against the other category values.}

\item{return_type}{\code{character} string indicating the type
of output to return: \code{"phyper"} will return the results
of the hypergeometric test using \code{phyper()}; and \code{"wide"}
will return a wide \code{data.frame} that contains the exact
numbers used for this test.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\description{
Test hypergeometric enrichment of range count categories
}
\details{
This function takes output from \code{peak_feature_ranged_counter()}
and runs hypergeometric tests for each corresponding category
value.

Specifically, the argument \code{test_cats} defines the category
values to test in each enrichment test. For example, the
category values may include \code{c("-1", "0", "1")}, and one may
want to test \code{c("1")}. This test will count the number of
peaks with category \code{"1"} that overlap features,
compared to the number of peaks with other category
values, in this case \code{c("-1", "0")}, that overlap features.

It is possible to combine category values, for example one
may test \code{c("-1", "1")} and in this scenario, any peak
with the category \code{"1"} or \code{"-1"} will be tested against
all other peaks, in this case category \code{"0"}.
}
